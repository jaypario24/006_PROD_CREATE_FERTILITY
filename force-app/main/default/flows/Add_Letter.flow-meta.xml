<?xml version="1.0" encoding="UTF-8"?>
<Flow xmlns="http://soap.sforce.com/2006/04/metadata">
    <actionCalls>
        <name>Go_to_Letter</name>
        <label>Go to Letter</label>
        <locationX>182</locationX>
        <locationY>1574</locationY>
        <actionName>ecflc:flowIdRedirect</actionName>
        <actionType>component</actionType>
        <flowTransactionModel>CurrentTransaction</flowTransactionModel>
        <inputParameters>
            <name>recordId</name>
            <value>
                <elementReference>Create_Letter</elementReference>
            </value>
        </inputParameters>
        <nameSegment>ecflc:flowIdRedirect</nameSegment>
        <storeOutputAutomatically>true</storeOutputAutomatically>
        <versionSegment>1</versionSegment>
    </actionCalls>
    <apiVersion>57.0</apiVersion>
    <assignments>
        <name>assign_icons</name>
        <label>assign icons</label>
        <locationX>182</locationX>
        <locationY>158</locationY>
        <assignmentItems>
            <assignToReference>icons</assignToReference>
            <operator>Add</operator>
            <value>
                <stringValue>custom:custom4</stringValue>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>icons</assignToReference>
            <operator>Add</operator>
            <value>
                <stringValue>custom:custom6</stringValue>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Get_User</targetReference>
        </connector>
    </assignments>
    <decisions>
        <name>From_Template</name>
        <label>From Template</label>
        <locationX>182</locationX>
        <locationY>998</locationY>
        <defaultConnector>
            <targetReference>Create_Letter</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Yes_From_Template</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Template.value</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Generate Letter From Template</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Choose_Template</targetReference>
            </connector>
            <label>Yes From Template</label>
        </rules>
    </decisions>
    <description>Adds a letter to the patient file from a template or from scratch.</description>
    <dynamicChoiceSets>
        <name>SystemTemplates</name>
        <collectionReference>Get_Templates</collectionReference>
        <dataType>String</dataType>
        <displayField>Name</displayField>
        <object>Task_Template__c</object>
        <valueField>Id</valueField>
    </dynamicChoiceSets>
    <environments>Default</environments>
    <interviewLabel>Add Letter {!$Flow.CurrentDateTime}</interviewLabel>
    <label>Add Letter</label>
    <processMetadataValues>
        <name>BuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>CanvasMode</name>
        <value>
            <stringValue>AUTO_LAYOUT_CANVAS</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>OriginBuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processType>Flow</processType>
    <recordCreates>
        <name>Create_Letter</name>
        <label>Create Letter</label>
        <locationX>182</locationX>
        <locationY>1454</locationY>
        <connector>
            <targetReference>Go_to_Letter</targetReference>
        </connector>
        <inputAssignments>
            <field>Letter_Content__c</field>
            <value>
                <elementReference>Get_Template.Letter_Text__c</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Letter_Date_and_Time__c</field>
            <value>
                <elementReference>$Flow.CurrentDateTime</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Patient__c</field>
            <value>
                <elementReference>recordId</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Referring_Doctor__c</field>
            <value>
                <elementReference>Get_Referal.Referring_Doctor__r.Id</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Status__c</field>
            <value>
                <stringValue>Draft</stringValue>
            </value>
        </inputAssignments>
        <object>Patient_Letters__c</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordCreates>
    <recordLookups>
        <name>Get_Doctor</name>
        <label>Get Doctor</label>
        <locationX>182</locationX>
        <locationY>398</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Get_Record_Type</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Internal_Doctor_Linkage__c</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>Get_User.Id</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>Doctor__c</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>Get_Record_Type</name>
        <label>Get Record Type</label>
        <locationX>182</locationX>
        <locationY>518</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Get_Templates</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>SobjectType</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Task_Template__c</stringValue>
            </value>
        </filters>
        <filters>
            <field>Name</field>
            <operator>Contains</operator>
            <value>
                <stringValue>Letter</stringValue>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>RecordType</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>Get_Referal</name>
        <label>Get Referal</label>
        <locationX>182</locationX>
        <locationY>758</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Template_Screen</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Patient__c</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>recordId</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>Referral__c</object>
        <sortField>Referral_Date__c</sortField>
        <sortOrder>Asc</sortOrder>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>Get_Template</name>
        <label>Get Template</label>
        <locationX>50</locationX>
        <locationY>1238</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Create_Letter</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>Template_pick</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>Task_Template__c</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>Get_Templates</name>
        <label>Get Templates</label>
        <locationX>182</locationX>
        <locationY>638</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Get_Referal</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Template_Owner__c</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>Get_Doctor.Id</elementReference>
            </value>
        </filters>
        <filters>
            <field>RecordTypeId</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>Get_Record_Type.Id</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>false</getFirstRecordOnly>
        <object>Task_Template__c</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>Get_User</name>
        <label>Get User</label>
        <locationX>182</locationX>
        <locationY>278</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Get_Doctor</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$User.Id</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>User</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <screens>
        <name>Choose_Template</name>
        <label>Choose Template</label>
        <locationX>50</locationX>
        <locationY>1118</locationY>
        <allowBack>true</allowBack>
        <allowFinish>true</allowFinish>
        <allowPause>false</allowPause>
        <connector>
            <targetReference>Get_Template</targetReference>
        </connector>
        <fields>
            <name>Template_pick</name>
            <choiceReferences>SystemTemplates</choiceReferences>
            <dataType>String</dataType>
            <fieldText>Template</fieldText>
            <fieldType>DropdownBox</fieldType>
            <isRequired>false</isRequired>
        </fields>
        <showFooter>true</showFooter>
        <showHeader>true</showHeader>
    </screens>
    <screens>
        <name>Template_Screen</name>
        <label>Template Screen</label>
        <locationX>182</locationX>
        <locationY>878</locationY>
        <allowBack>false</allowBack>
        <allowFinish>true</allowFinish>
        <allowPause>false</allowPause>
        <connector>
            <targetReference>From_Template</targetReference>
        </connector>
        <fields>
            <name>Template</name>
            <extensionName>c:fsc_quickChoiceFSC</extensionName>
            <fieldType>ComponentInstance</fieldType>
            <inputParameters>
                <name>displayMode</name>
                <value>
                    <stringValue>Visual</stringValue>
                </value>
            </inputParameters>
            <inputParameters>
                <name>numberOfColumns</name>
                <value>
                    <stringValue>1</stringValue>
                </value>
            </inputParameters>
            <inputParameters>
                <name>includeIcons</name>
                <value>
                    <booleanValue>true</booleanValue>
                </value>
            </inputParameters>
            <inputParameters>
                <name>navOnSelect</name>
                <value>
                    <booleanValue>true</booleanValue>
                </value>
            </inputParameters>
            <inputParameters>
                <name>isResponsive</name>
                <value>
                    <booleanValue>true</booleanValue>
                </value>
            </inputParameters>
            <inputParameters>
                <name>iconSize</name>
                <value>
                    <stringValue>large</stringValue>
                </value>
            </inputParameters>
            <inputParameters>
                <name>inputMode</name>
                <value>
                    <stringValue>Static Choices</stringValue>
                </value>
            </inputParameters>
            <inputParameters>
                <name>staticChoicesString</name>
                <value>
                    <stringValue>[{&quot;label&quot;:&quot;Generate Letter From Template&quot;,&quot;value&quot;:&quot;Generates a letter from one of your system templates&quot;},{&quot;label&quot;:&quot;Generate Letter From Scratch&quot;,&quot;value&quot;:&quot;Creates a blank letter&quot;}]</stringValue>
                </value>
            </inputParameters>
            <inputParameters>
                <name>choiceIcons</name>
                <value>
                    <elementReference>icons</elementReference>
                </value>
            </inputParameters>
            <inputsOnNextNavToAssocScrn>UseStoredValues</inputsOnNextNavToAssocScrn>
            <isRequired>true</isRequired>
            <storeOutputAutomatically>true</storeOutputAutomatically>
        </fields>
        <showFooter>true</showFooter>
        <showHeader>true</showHeader>
    </screens>
    <start>
        <locationX>56</locationX>
        <locationY>0</locationY>
        <connector>
            <targetReference>assign_icons</targetReference>
        </connector>
    </start>
    <status>Draft</status>
    <variables>
        <name>icons</name>
        <dataType>String</dataType>
        <isCollection>true</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>recordId</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>false</isOutput>
    </variables>
</Flow>
