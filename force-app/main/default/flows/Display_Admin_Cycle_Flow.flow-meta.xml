<?xml version="1.0" encoding="UTF-8"?>
<Flow xmlns="http://soap.sforce.com/2006/04/metadata">
    <apiVersion>57.0</apiVersion>
    <decisions>
        <name>Consent_Valid</name>
        <label>Consent Valid?</label>
        <locationX>176</locationX>
        <locationY>866</locationY>
        <defaultConnector>
            <targetReference>Get_Financial_Consent_Record_Type</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Valid</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Get_Consent</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Get_Financial_Consent_Record_Type</targetReference>
            </connector>
            <label>Valid</label>
        </rules>
        <rules>
            <name>Invalid</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Get_Consent</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Get_Financial_Consent_Record_Type</targetReference>
            </connector>
            <label>Invalid</label>
        </rules>
    </decisions>
    <decisions>
        <name>Flag_Invoice</name>
        <label>Flag Invoice?</label>
        <locationX>176</locationX>
        <locationY>458</locationY>
        <defaultConnector>
            <targetReference>Get_Cycle_Consent_Record_Type</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Invoice_Outstanding</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Get_Invoice.Amount_Outstanding__c</leftValueReference>
                <operator>GreaterThan</operator>
                <rightValue>
                    <numberValue>0.0</numberValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Get_Cycle_Consent_Record_Type</targetReference>
            </connector>
            <label>Invoice Outstanding</label>
        </rules>
        <rules>
            <name>Invoice_Paid</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Get_Invoice.Amount_Outstanding__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <numberValue>0.0</numberValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Get_Cycle_Consent_Record_Type</targetReference>
            </connector>
            <label>Invoice Paid</label>
        </rules>
    </decisions>
    <decisions>
        <name>Insured</name>
        <label>Insured?</label>
        <locationX>176</locationX>
        <locationY>1874</locationY>
        <defaultConnector>
            <targetReference>Cycle_Display_Screen</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Yes_INsured</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Get_Insurance</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Cycle_Display_Screen</targetReference>
            </connector>
            <label>Yes INsured</label>
        </rules>
        <rules>
            <name>Not_INsured</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Get_Insurance</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Cycle_Display_Screen</targetReference>
            </connector>
            <label>Not INsured</label>
        </rules>
    </decisions>
    <decisions>
        <name>Referral_Valid</name>
        <label>Referral Valid</label>
        <locationX>176</locationX>
        <locationY>1574</locationY>
        <defaultConnector>
            <targetReference>Get_Insurance</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Valid_Ref</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Get_Referral</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Get_Insurance</targetReference>
            </connector>
            <label>Valid Ref</label>
        </rules>
        <rules>
            <name>Invalid_ref</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Get_Referral</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Get_Insurance</targetReference>
            </connector>
            <label>Invalid ref</label>
        </rules>
    </decisions>
    <decisions>
        <name>Valid_Fin_Consent</name>
        <label>Valid Fin Consent?</label>
        <locationX>176</locationX>
        <locationY>1274</locationY>
        <defaultConnector>
            <targetReference>Get_Referral</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Valid_Fin</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Get_Fin_Consent</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Get_Referral</targetReference>
            </connector>
            <label>Valid Fin</label>
        </rules>
        <rules>
            <name>Invalid_Fin</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Get_Fin_Consent</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Get_Referral</targetReference>
            </connector>
            <label>Invalid Fin</label>
        </rules>
    </decisions>
    <environments>Default</environments>
    <formulas>
        <name>CycleInfoFormula</name>
        <dataType>String</dataType>
        <expression>&quot;Cycle Summary &quot;&amp;IF(
  NOT(ISBLANK(TEXT({!Get_Cycle.Protocol__c}))), 
  TEXT({!Get_Cycle.Protocol__c}) + &apos;, &apos;, 
  &apos;&apos;
) + 
IF(
  NOT(ISBLANK(TEXT({!Get_Cycle.Insemination_Method__c}))), 
  &quot;Insem Method: &quot;&amp;TEXT({!Get_Cycle.Insemination_Method__c}) + &apos;, &apos;, 
  &apos;&apos;
) +
IF(
  NOT(ISBLANK(TEXT({!Get_Cycle.Freeze_All_Options__c}))), 
  &quot;Freeze All: &quot;&amp;TEXT({!Get_Cycle.Freeze_All_Options__c}) + &apos;, &apos;, 
  &apos;&apos;
) +
IF(
  NOT(ISBLANK(TEXT({!Get_Cycle.PGT_Type__c}))), 
  &quot;PGT Type &quot;&amp;TEXT({!Get_Cycle.PGT_Type__c}) + &apos;, &apos;, 
  &apos;&apos;
) +
IF(
  NOT(ISBLANK(TEXT({!Get_Cycle.Medicare_Claimable__c}))), 
  &quot;Medicare Eligibility: &quot;&amp;TEXT({!Get_Cycle.Medicare_Claimable__c}), 
  &quot;No Medicare information logged&quot;
)</expression>
    </formulas>
    <interviewLabel>Display Admin Flow {!$Flow.CurrentDateTime}</interviewLabel>
    <label>Display Admin Cycle Flow</label>
    <processMetadataValues>
        <name>BuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>CanvasMode</name>
        <value>
            <stringValue>AUTO_LAYOUT_CANVAS</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>OriginBuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processType>Flow</processType>
    <recordLookups>
        <name>Get_Consent</name>
        <label>Get Consent</label>
        <locationX>176</locationX>
        <locationY>758</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Consent_Valid</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Cycle__c</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>recordId</elementReference>
            </value>
        </filters>
        <filters>
            <field>RecordTypeId</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>Get_Cycle_Consent_Record_Type.RecordTypeID</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>Consent__c</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>Get_Cycle</name>
        <label>Get Cycle</label>
        <locationX>176</locationX>
        <locationY>134</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Get_Patient</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>recordId</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>Cycle__c</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>Get_Fin_Consent</name>
        <label>Get Fin Consent</label>
        <locationX>176</locationX>
        <locationY>1166</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Valid_Fin_Consent</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Cycle__c</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>recordId</elementReference>
            </value>
        </filters>
        <filters>
            <field>RecordTypeId</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>Get_Financial_Consent_Record_Type.RecordTypeID</elementReference>
            </value>
        </filters>
        <filters>
            <field>Valid_Consent__c</field>
            <operator>EqualTo</operator>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>Consent__c</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>Get_Insurance</name>
        <label>Get Insurance</label>
        <locationX>176</locationX>
        <locationY>1766</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Insured</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Patient_Donor__c</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>Get_Cycle.Patient__r.Id</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>Health_Fund_and_Insurance__c</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>Get_Invoice</name>
        <label>Get Invoice</label>
        <locationX>176</locationX>
        <locationY>350</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Flag_Invoice</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Cycle__c</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>recordId</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>Invoice__c</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>Get_Patient</name>
        <label>Get Patient</label>
        <locationX>176</locationX>
        <locationY>242</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Get_Invoice</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>Get_Cycle.Patient__r.Id</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>Contact</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>Get_Referral</name>
        <label>Get Referral</label>
        <locationX>176</locationX>
        <locationY>1466</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Referral_Valid</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Patient__c</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>Get_Cycle.Patient__r.Id</elementReference>
            </value>
        </filters>
        <filters>
            <field>Valid_Referral__c</field>
            <operator>EqualTo</operator>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>Referral__c</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <screens>
        <name>Cycle_Display_Screen</name>
        <label>Cycle Display Screen</label>
        <locationX>176</locationX>
        <locationY>2066</locationY>
        <allowBack>true</allowBack>
        <allowFinish>true</allowFinish>
        <allowPause>true</allowPause>
        <fields>
            <name>CycleDetails</name>
            <fieldText>&lt;p style=&quot;text-align: center;&quot;&gt;&lt;strong style=&quot;font-size: 20px;&quot;&gt;{!CycleInfoFormula}&lt;/strong&gt;&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
        </fields>
        <fields>
            <name>Invoice_text</name>
            <fieldText>&lt;p style=&quot;text-align: center;&quot;&gt;&lt;strong style=&quot;color: rgb(255, 179, 0); font-size: 20px;&quot;&gt;Invoice Outstanding&lt;/strong&gt;&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
            <visibilityRule>
                <conditionLogic>1</conditionLogic>
                <conditions>
                    <leftValueReference>Invoice_Outstanding</leftValueReference>
                    <operator>EqualTo</operator>
                    <rightValue>
                        <booleanValue>true</booleanValue>
                    </rightValue>
                </conditions>
            </visibilityRule>
        </fields>
        <fields>
            <name>Referral_text</name>
            <fieldText>&lt;p style=&quot;text-align: center;&quot;&gt;&lt;strong style=&quot;font-size: 20px; color: rgb(255, 179, 0);&quot;&gt;Check Referral&lt;/strong&gt;&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
            <visibilityRule>
                <conditionLogic>and</conditionLogic>
                <conditions>
                    <leftValueReference>Invalid_ref</leftValueReference>
                    <operator>EqualTo</operator>
                    <rightValue>
                        <booleanValue>true</booleanValue>
                    </rightValue>
                </conditions>
            </visibilityRule>
        </fields>
        <fields>
            <name>Cycle_Consent_Text</name>
            <fieldText>&lt;p style=&quot;text-align: center;&quot;&gt;&lt;strong style=&quot;font-size: 20px; color: rgb(255, 179, 0);&quot;&gt;Invalid Cycle Consent&lt;/strong&gt;&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
            <visibilityRule>
                <conditionLogic>1</conditionLogic>
                <conditions>
                    <leftValueReference>Invalid</leftValueReference>
                    <operator>EqualTo</operator>
                    <rightValue>
                        <booleanValue>true</booleanValue>
                    </rightValue>
                </conditions>
            </visibilityRule>
        </fields>
        <fields>
            <name>Invalid_Fin_Consent_Text</name>
            <fieldText>&lt;p style=&quot;text-align: center;&quot;&gt;&lt;strong style=&quot;color: rgb(255, 179, 0); font-size: 20px;&quot;&gt;Invalid Financial Consent﻿&lt;/strong&gt;&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
            <visibilityRule>
                <conditionLogic>and</conditionLogic>
                <conditions>
                    <leftValueReference>Invalid_Fin</leftValueReference>
                    <operator>EqualTo</operator>
                    <rightValue>
                        <booleanValue>true</booleanValue>
                    </rightValue>
                </conditions>
            </visibilityRule>
        </fields>
        <fields>
            <name>Insured_txt</name>
            <fieldText>&lt;p style=&quot;text-align: center;&quot;&gt;&lt;strong style=&quot;background-color: rgb(255, 255, 255); font-size: 20px; color: rgb(48, 218, 0);&quot;&gt;Patient is Insured&lt;/strong&gt;&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
            <visibilityRule>
                <conditionLogic>and</conditionLogic>
                <conditions>
                    <leftValueReference>Yes_INsured</leftValueReference>
                    <operator>EqualTo</operator>
                    <rightValue>
                        <booleanValue>true</booleanValue>
                    </rightValue>
                </conditions>
            </visibilityRule>
        </fields>
        <fields>
            <name>notInsuredTxt</name>
            <fieldText>&lt;p style=&quot;text-align: center;&quot;&gt;&lt;strong style=&quot;background-color: rgb(255, 255, 255); font-size: 20px; color: rgb(255, 179, 0);&quot;&gt;Patient is not Insured&lt;/strong&gt;&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
            <visibilityRule>
                <conditionLogic>and</conditionLogic>
                <conditions>
                    <leftValueReference>Not_INsured</leftValueReference>
                    <operator>EqualTo</operator>
                    <rightValue>
                        <booleanValue>true</booleanValue>
                    </rightValue>
                </conditions>
            </visibilityRule>
        </fields>
        <showFooter>false</showFooter>
        <showHeader>false</showHeader>
    </screens>
    <start>
        <locationX>50</locationX>
        <locationY>0</locationY>
        <connector>
            <targetReference>Get_Cycle</targetReference>
        </connector>
    </start>
    <status>Draft</status>
    <subflows>
        <name>Get_Cycle_Consent_Record_Type</name>
        <label>Get Cycle Consent Record Type</label>
        <locationX>176</locationX>
        <locationY>650</locationY>
        <connector>
            <targetReference>Get_Consent</targetReference>
        </connector>
        <flowName>Developer_Get_Record_Type_ID</flowName>
        <inputAssignments>
            <name>RecordTypeIDName</name>
            <value>
                <stringValue>Cycle Consent</stringValue>
            </value>
        </inputAssignments>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </subflows>
    <subflows>
        <name>Get_Financial_Consent_Record_Type</name>
        <label>Get Financial Consent Record Type</label>
        <locationX>176</locationX>
        <locationY>1058</locationY>
        <connector>
            <targetReference>Get_Fin_Consent</targetReference>
        </connector>
        <flowName>Developer_Get_Record_Type_ID</flowName>
        <inputAssignments>
            <name>RecordTypeIDName</name>
            <value>
                <stringValue>Financial Consent</stringValue>
            </value>
        </inputAssignments>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </subflows>
    <variables>
        <name>recordId</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>false</isOutput>
    </variables>
</Flow>
