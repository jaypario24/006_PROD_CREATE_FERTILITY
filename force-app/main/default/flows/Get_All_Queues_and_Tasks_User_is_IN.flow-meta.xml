<?xml version="1.0" encoding="UTF-8"?>
<Flow xmlns="http://soap.sforce.com/2006/04/metadata">
    <apiVersion>57.0</apiVersion>
    <assignments>
        <name>Copy_1_of_Assign_to_Tasks</name>
        <label>Copy 1 of Assign to Tasks</label>
        <locationX>834</locationX>
        <locationY>1011</locationY>
        <assignmentItems>
            <assignToReference>AllTasksVar</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>Copy_1_of_Get_Tasks</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Loop_Groups</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Copy_1_of_Assign_to_Tasks_0</name>
        <label>Copy 1 of Assign to Tasks</label>
        <locationX>1578</locationX>
        <locationY>580</locationY>
        <assignmentItems>
            <assignToReference>AllTasksVar</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>Copy_1_of_Get_Tasks_0</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Secondary_Groups</targetReference>
        </connector>
    </assignments>
    <decisions>
        <name>Queue</name>
        <label>Queue?</label>
        <locationX>1071</locationX>
        <locationY>858</locationY>
        <defaultConnector>
            <targetReference>Get_Secondary_Group_Memberships</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Yes_Queue</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Loop_Groups.Group.Type</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Queue</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Copy_1_of_Get_Tasks</targetReference>
            </connector>
            <label>Yes Queue</label>
        </rules>
    </decisions>
    <decisions>
        <name>Secondary_Queue</name>
        <label>Secondary Queue?</label>
        <locationX>1462</locationX>
        <locationY>694</locationY>
        <defaultConnector>
            <targetReference>Secondary_Groups</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>YEs_Secondary_Queue</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Secondary_Groups.Group.Type</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Queue</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Copy_1_of_Get_Tasks_0</targetReference>
            </connector>
            <label>YEs Secondary Queue</label>
        </rules>
    </decisions>
    <description>This flow retrieve all tasks that are allocated to a user via queues and individually, Can be filtered by task type.</description>
    <environments>Default</environments>
    <interviewLabel>Get All Queues and Tasks User is IN {!$Flow.CurrentDateTime}</interviewLabel>
    <label>Get All Queues and Tasks User is in</label>
    <loops>
        <name>Loop_Groups</name>
        <label>Loop Groups</label>
        <locationX>677</locationX>
        <locationY>732</locationY>
        <collectionReference>Get_Group_Memeberships</collectionReference>
        <iterationOrder>Asc</iterationOrder>
        <nextValueConnector>
            <targetReference>Queue</targetReference>
        </nextValueConnector>
    </loops>
    <loops>
        <name>Secondary_Groups</name>
        <label>Secondary Groups</label>
        <locationX>1375</locationX>
        <locationY>522</locationY>
        <collectionReference>Get_Secondary_Group_Memberships</collectionReference>
        <iterationOrder>Asc</iterationOrder>
        <nextValueConnector>
            <targetReference>Secondary_Queue</targetReference>
        </nextValueConnector>
        <noMoreValuesConnector>
            <targetReference>Loop_Groups</targetReference>
        </noMoreValuesConnector>
    </loops>
    <processMetadataValues>
        <name>BuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>CanvasMode</name>
        <value>
            <stringValue>FREE_FORM_CANVAS</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>OriginBuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processType>Flow</processType>
    <recordLookups>
        <name>Copy_1_of_Get_Tasks</name>
        <label>Copy 1 of Get Tasks</label>
        <locationX>1085</locationX>
        <locationY>1009</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Copy_1_of_Assign_to_Tasks</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>OwnerId</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>Loop_Groups.Group.Id</elementReference>
            </value>
        </filters>
        <filters>
            <field>Status</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Open</stringValue>
            </value>
        </filters>
        <filters>
            <field>RecordTypeId</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>QueueType</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>false</getFirstRecordOnly>
        <object>Task</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>Copy_1_of_Get_Tasks_0</name>
        <label>Copy 1 of Get Tasks</label>
        <locationX>1688</locationX>
        <locationY>741</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Copy_1_of_Assign_to_Tasks_0</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>OwnerId</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>Secondary_Groups.GroupId</elementReference>
            </value>
        </filters>
        <filters>
            <field>Status</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Open</stringValue>
            </value>
        </filters>
        <filters>
            <field>RecordTypeId</field>
            <operator>NotEqualTo</operator>
            <value>
                <elementReference>QueueType</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>false</getFirstRecordOnly>
        <object>Task</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>Get_Group_Memeberships</name>
        <label>Get Group Memeberships</label>
        <locationX>690</locationX>
        <locationY>397</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Loop_Groups</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>UserOrGroupId</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>Get_USer.Id</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>false</getFirstRecordOnly>
        <object>GroupMember</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>Get_Secondary_Group_Memberships</name>
        <label>Get Secondary Group Memberships</label>
        <locationX>1332</locationX>
        <locationY>725</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Secondary_Groups</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>UserOrGroupId</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>Loop_Groups.Group.Id</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>false</getFirstRecordOnly>
        <object>GroupMember</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>Get_USer</name>
        <label>Get USer</label>
        <locationX>689</locationX>
        <locationY>253</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Get_Group_Memeberships</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>UserId</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>User</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <start>
        <locationX>554</locationX>
        <locationY>50</locationY>
        <connector>
            <targetReference>Get_USer</targetReference>
        </connector>
    </start>
    <status>Draft</status>
    <variables>
        <name>AllTasksVar</name>
        <dataType>SObject</dataType>
        <isCollection>true</isCollection>
        <isInput>false</isInput>
        <isOutput>true</isOutput>
        <objectType>Task</objectType>
    </variables>
    <variables>
        <name>QueueType</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>QueueVar</name>
        <dataType>SObject</dataType>
        <isCollection>true</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <objectType>Group</objectType>
    </variables>
    <variables>
        <name>UserId</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>false</isOutput>
    </variables>
</Flow>
