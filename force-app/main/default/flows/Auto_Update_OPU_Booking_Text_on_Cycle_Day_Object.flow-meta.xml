<?xml version="1.0" encoding="UTF-8"?>
<Flow xmlns="http://soap.sforce.com/2006/04/metadata">
    <apiVersion>57.0</apiVersion>
    <description>when EUP is changed it updates static text on the cycle day event</description>
    <environments>Default</environments>
    <formulas>
        <name>NewComments</name>
        <dataType>String</dataType>
        <expression>{!Get_New_Cycle_Day_Event.Comments__c}&amp;&quot; OPU Booked&quot;</expression>
    </formulas>
    <formulas>
        <name>NewDate</name>
        <dataType>Date</dataType>
        <expression>DATEVALUE({!$Record.StartDateTime})</expression>
    </formulas>
    <formulas>
        <name>PriorDate</name>
        <dataType>Date</dataType>
        <expression>DATEVALUE({!$Record__Prior.StartDateTime})</expression>
    </formulas>
    <formulas>
        <name>ReplaceOPUBooked</name>
        <dataType>String</dataType>
        <expression>IF(
  CONTAINS({!Get_Prior_Cycle_Day_Event.Comments__c}, &quot;OPU Booked&quot;),
  SUBSTITUTE({!Get_Prior_Cycle_Day_Event.Comments__c}, &quot;OPU Booked&quot;, &quot;&quot;),
  {!Get_Prior_Cycle_Day_Event.Comments__c}
)</expression>
    </formulas>
    <interviewLabel>Auto Update OPU Booking Text on Cycle Day Object {!$Flow.CurrentDateTime}</interviewLabel>
    <label>Auto Update OPU Booking Text on Cycle Day Object</label>
    <processMetadataValues>
        <name>BuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>CanvasMode</name>
        <value>
            <stringValue>AUTO_LAYOUT_CANVAS</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>OriginBuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processType>AutoLaunchedFlow</processType>
    <recordLookups>
        <name>Get_New_Cycle_Day_Event</name>
        <label>Get New Cycle Day Event</label>
        <locationX>176</locationX>
        <locationY>575</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Update_New_Day</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Day_Date__c</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>NewDate</elementReference>
            </value>
        </filters>
        <filters>
            <field>Cycle__c</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.WhatId</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>Cycle_Day__c</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>Get_Prior_Cycle_Day_Event</name>
        <label>Get Prior Cycle Day Event</label>
        <locationX>176</locationX>
        <locationY>335</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Update_Prior_Record</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Day_Date__c</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>PriorDate</elementReference>
            </value>
        </filters>
        <filters>
            <field>Cycle__c</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record__Prior.WhatId</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>Cycle_Day__c</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordUpdates>
        <name>Update_New_Day</name>
        <label>Update New Day</label>
        <locationX>176</locationX>
        <locationY>695</locationY>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>Get_New_Cycle_Day_Event.Id</elementReference>
            </value>
        </filters>
        <inputAssignments>
            <field>Comments__c</field>
            <value>
                <elementReference>NewComments</elementReference>
            </value>
        </inputAssignments>
        <object>Cycle_Day__c</object>
    </recordUpdates>
    <recordUpdates>
        <name>Update_Prior_Record</name>
        <label>Update Prior Record</label>
        <locationX>176</locationX>
        <locationY>455</locationY>
        <connector>
            <targetReference>Get_New_Cycle_Day_Event</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>Get_Prior_Cycle_Day_Event.Id</elementReference>
            </value>
        </filters>
        <inputAssignments>
            <field>Comments__c</field>
            <value>
                <elementReference>ReplaceOPUBooked</elementReference>
            </value>
        </inputAssignments>
        <object>Cycle_Day__c</object>
    </recordUpdates>
    <start>
        <locationX>50</locationX>
        <locationY>0</locationY>
        <connector>
            <targetReference>Get_Prior_Cycle_Day_Event</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>StartDateTime</field>
            <operator>IsChanged</operator>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </filters>
        <filters>
            <field>Procedure_Type__c</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>OPU</stringValue>
            </value>
        </filters>
        <object>Event</object>
        <recordTriggerType>Update</recordTriggerType>
        <triggerType>RecordAfterSave</triggerType>
    </start>
    <status>Draft</status>
</Flow>
