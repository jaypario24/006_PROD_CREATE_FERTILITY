<?xml version="1.0" encoding="UTF-8"?>
<ExternalServiceRegistration xmlns="http://soap.sforce.com/2006/04/metadata">
    <label>EApi</label>
    <namedCredentialReference>ChatGPT</namedCredentialReference>
    <operations>
        <active>true</active>
        <name>postlogin</name>
    </operations>
    <operations>
        <active>true</active>
        <name>postpostpatient</name>
    </operations>
    <registrationProviderType>Custom</registrationProviderType>
    <schema>{
  &quot;openapi&quot;: &quot;3.0.0&quot;,
  &quot;info&quot;: {
    &quot;title&quot;: &quot;ES Database API&quot;,
    &quot;description&quot;: &quot;Schema for the ES Database API&quot;,
    &quot;version&quot;: &quot;1.0.0&quot;
  },
  &quot;servers&quot;: [
    {
      &quot;url&quot;: &quot;https://172.45.1.35:4000&quot;
    }
  ],
  &quot;paths&quot;: {
    &quot;/login&quot;: {
      &quot;post&quot;: {
        &quot;summary&quot;: &quot;Performs a login using the specified credentials.&quot;,
        &quot;description&quot;: &quot;If login is successful a token is returned. Note that a successful login is required in order to obtain a token to use in subsequent API requests.&quot;,
        &quot;requestBody&quot;: {
          &quot;required&quot;: true,
          &quot;content&quot;: {
            &quot;application/json&quot;: {
              &quot;schema&quot;: {
                &quot;type&quot;: &quot;object&quot;,
                &quot;properties&quot;: {
                  &quot;Username&quot;: {
                    &quot;type&quot;: &quot;string&quot;,
                    &quot;description&quot;: &quot;String containing the username.&quot;
                  },
                  &quot;Password&quot;: {
                    &quot;type&quot;: &quot;string&quot;,
                    &quot;description&quot;: &quot;String containing the case-sensitive password.&quot;
                  }
                },
                &quot;required&quot;: [
                  &quot;Username&quot;,
                  &quot;Password&quot;
                ]
              }
            }
          }
        },
        &quot;responses&quot;: {
          &quot;200&quot;: {
            &quot;description&quot;: &quot;Login successful.&quot;,
            &quot;content&quot;: {
              &quot;application/json&quot;: {
                &quot;schema&quot;: {
                  &quot;type&quot;: &quot;object&quot;,
                  &quot;properties&quot;: {
                    &quot;Token&quot;: {
                      &quot;type&quot;: &quot;string&quot;,
                      &quot;description&quot;: &quot;String token to use for all subsequent API requests.&quot;
                    }
                  }
                }
              }
            }
          },
          &quot;400&quot;: {
            &quot;description&quot;: &quot;Missing parameter.&quot;
          },
          &quot;401&quot;: {
            &quot;description&quot;: &quot;Login credentials not accepted.&quot;
          }
        }
      }
    },
    &quot;/POST/patient&quot;: {
      &quot;post&quot;: {
        &quot;summary&quot;: &quot;Posts a patient to the ES Database using the provided patient information.&quot;,
        &quot;description&quot;: &quot;DISCLAIMER - PatientIDx and PatientID must be unique. The ES Public API will not insert any information for a patient where PatientIDx or PatientID already exists in the database.&quot;,
        &quot;requestBody&quot;: {
          &quot;required&quot;: true,
          &quot;content&quot;: {
            &quot;application/json&quot;: {
              &quot;schema&quot;: {
                &quot;type&quot;: &quot;object&quot;,
                &quot;properties&quot;: {
                  &quot;PatientIDx&quot;: {
                    &quot;type&quot;: &quot;string&quot;,
                    &quot;description&quot;: &quot;String containing unique patient key.&quot;
                  },
                  &quot;PatientID&quot;: {
                    &quot;type&quot;: &quot;string&quot;,
                    &quot;description&quot;: &quot;String containing unique patient ID.&quot;
                  },
                  &quot;FirstName&quot;: {
                    &quot;type&quot;: &quot;string&quot;,
                    &quot;description&quot;: &quot;String containing first name for patient.&quot;
                  },
                  &quot;LastName&quot;: {
                    &quot;type&quot;: &quot;string&quot;,
                    &quot;description&quot;: &quot;String containing last name for patient.&quot;
                  },
                  &quot;DateOfBirth&quot;: {
                    &quot;type&quot;: &quot;string&quot;,
                    &quot;format&quot;: &quot;date&quot;,
                    &quot;description&quot;: &quot;String containing date of birth in format yyyy.MM.dd.&quot;
                  }
                },
                &quot;required&quot;: [
                  &quot;PatientIDx&quot;,
                  &quot;PatientID&quot;,
                  &quot;FirstName&quot;,
                  &quot;LastName&quot;,
                  &quot;DateOfBirth&quot;
                ]
              }
            }
          }
        },
        &quot;responses&quot;: {
          &quot;201&quot;: {
            &quot;description&quot;: &quot;Patient added.&quot;,
            &quot;content&quot;: {
              &quot;application/json&quot;: {
                &quot;schema&quot;: {
                  &quot;type&quot;: &quot;object&quot;,
                  &quot;properties&quot;: {
                    &quot;message&quot;: {
                      &quot;type&quot;: &quot;string&quot;,
                      &quot;description&quot;: &quot;A message indicating the result of the POST operation.&quot;
                    }
                  }
                }
              }
            }
          },
          &quot;400&quot;: {
            &quot;description&quot;: &quot;Invalid JSON string or missing parameter from JSON string.&quot;
          },
          &quot;401&quot;: {
            &quot;description&quot;: &quot;Token is invalid or expired or client is not authorized to use the feature.&quot;
          },
          &quot;409&quot;: {
            &quot;description&quot;: &quot;Patient with identical PatientIDx or PatientID already exists in database.&quot;
          }
        }
      }
    }
  }
}</schema>
    <schemaType>OpenApi3</schemaType>
    <schemaUploadFileExtension>json</schemaUploadFileExtension>
    <schemaUploadFileName>openapi3_0</schemaUploadFileName>
    <serviceBinding>{&quot;host&quot;:&quot;172.45.1.35&quot;,&quot;basePath&quot;:&quot;&quot;,&quot;allowedSchemes&quot;:[&quot;HTTPS&quot;],&quot;requestMediaTypes&quot;:[],&quot;responseMediaTypes&quot;:[],&quot;compatibleMediaTypes&quot;:{}}</serviceBinding>
    <status>Complete</status>
    <systemVersion>4</systemVersion>
</ExternalServiceRegistration>
